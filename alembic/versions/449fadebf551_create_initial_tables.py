"""create initial tables

Revision ID: 449fadebf551
Revises: 
Create Date: 2025-05-12 16:47:52.079289

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '449fadebf551'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('_version_',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('version', sa.String(length=8), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('symbols',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=24), nullable=True),
    sa.Column('symbol_group', sa.String(length=18), nullable=True),
    sa.Column('asset_class', sa.String(length=3), nullable=True),
    sa.Column('expiry', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_symbols_asset_class'), 'symbols', ['asset_class'], unique=False)
    op.create_index(op.f('ix_symbols_expiry'), 'symbols', ['expiry'], unique=False)
    op.create_index(op.f('ix_symbols_symbol'), 'symbols', ['symbol'], unique=False)
    op.create_index(op.f('ix_symbols_symbol_group'), 'symbols', ['symbol_group'], unique=False)
    op.create_table('trades',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('algo', sa.String(length=32), nullable=True),
    sa.Column('symbol', sa.String(length=12), nullable=True),
    sa.Column('direction', sa.String(length=5), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('entry_time', sa.DateTime(), nullable=True),
    sa.Column('exit_time', sa.DateTime(), nullable=True),
    sa.Column('exit_reason', sa.String(length=8), nullable=True),
    sa.Column('order_type', sa.String(length=6), nullable=True),
    sa.Column('market_price', sa.Numeric(), nullable=True),
    sa.Column('target', sa.Numeric(), nullable=True),
    sa.Column('stop', sa.Numeric(), nullable=True),
    sa.Column('entry_price', sa.Numeric(), nullable=True),
    sa.Column('exit_price', sa.Numeric(), nullable=True),
    sa.Column('realized_pnl', sa.Numeric(), server_default='0', nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('algo', 'symbol', 'entry_time', name='uq_trade_algo_symbol_entry')
    )
    op.create_index(op.f('ix_trades_algo'), 'trades', ['algo'], unique=False)
    op.create_index(op.f('ix_trades_entry_price'), 'trades', ['entry_price'], unique=False)
    op.create_index(op.f('ix_trades_entry_time'), 'trades', ['entry_time'], unique=False)
    op.create_index(op.f('ix_trades_exit_price'), 'trades', ['exit_price'], unique=False)
    op.create_index(op.f('ix_trades_exit_reason'), 'trades', ['exit_reason'], unique=False)
    op.create_index(op.f('ix_trades_exit_time'), 'trades', ['exit_time'], unique=False)
    op.create_index(op.f('ix_trades_market_price'), 'trades', ['market_price'], unique=False)
    op.create_index(op.f('ix_trades_order_type'), 'trades', ['order_type'], unique=False)
    op.create_index(op.f('ix_trades_symbol'), 'trades', ['symbol'], unique=False)
    op.create_table('bars',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('datetime', sa.DateTime(), nullable=False),
    sa.Column('symbol_id', sa.Integer(), nullable=False),
    sa.Column('open', sa.Numeric(), nullable=True),
    sa.Column('high', sa.Numeric(), nullable=True),
    sa.Column('low', sa.Numeric(), nullable=True),
    sa.Column('close', sa.Numeric(), nullable=True),
    sa.Column('volume', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['symbol_id'], ['symbols.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('datetime', 'symbol_id', name='uq_bar_datetime_symbol')
    )
    op.create_index(op.f('ix_bars_datetime'), 'bars', ['datetime'], unique=False)
    op.create_index(op.f('ix_bars_symbol_id'), 'bars', ['symbol_id'], unique=False)
    op.create_table('ticks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('datetime', sa.DateTime(), nullable=False),
    sa.Column('symbol_id', sa.Integer(), nullable=False),
    sa.Column('bid', sa.Numeric(), nullable=True),
    sa.Column('bidsize', sa.Integer(), nullable=True),
    sa.Column('ask', sa.Numeric(), nullable=True),
    sa.Column('asksize', sa.Integer(), nullable=True),
    sa.Column('last', sa.Numeric(), nullable=True),
    sa.Column('lastsize', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['symbol_id'], ['symbols.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('datetime', 'symbol_id', name='uq_tick_datetime_symbol')
    )
    op.create_index(op.f('ix_ticks_datetime'), 'ticks', ['datetime'], unique=False)
    op.create_index(op.f('ix_ticks_symbol_id'), 'ticks', ['symbol_id'], unique=False)
    op.create_table('greeks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tick_id', sa.Integer(), nullable=True),
    sa.Column('bar_id', sa.Integer(), nullable=True),
    sa.Column('price', sa.Numeric(), nullable=True),
    sa.Column('underlying', sa.Numeric(), nullable=True),
    sa.Column('dividend', sa.Numeric(), nullable=True),
    sa.Column('volume', sa.Integer(), nullable=True),
    sa.Column('iv', sa.Numeric(), nullable=True),
    sa.Column('oi', sa.Numeric(), nullable=True),
    sa.Column('delta', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('gamma', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('theta', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('vega', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['bar_id'], ['bars.id'], ),
    sa.ForeignKeyConstraint(['tick_id'], ['ticks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_greeks_bar_id'), 'greeks', ['bar_id'], unique=False)
    op.create_index(op.f('ix_greeks_tick_id'), 'greeks', ['tick_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_greeks_tick_id'), table_name='greeks')
    op.drop_index(op.f('ix_greeks_bar_id'), table_name='greeks')
    op.drop_table('greeks')
    op.drop_index(op.f('ix_ticks_symbol_id'), table_name='ticks')
    op.drop_index(op.f('ix_ticks_datetime'), table_name='ticks')
    op.drop_table('ticks')
    op.drop_index(op.f('ix_bars_symbol_id'), table_name='bars')
    op.drop_index(op.f('ix_bars_datetime'), table_name='bars')
    op.drop_table('bars')
    op.drop_index(op.f('ix_trades_symbol'), table_name='trades')
    op.drop_index(op.f('ix_trades_order_type'), table_name='trades')
    op.drop_index(op.f('ix_trades_market_price'), table_name='trades')
    op.drop_index(op.f('ix_trades_exit_time'), table_name='trades')
    op.drop_index(op.f('ix_trades_exit_reason'), table_name='trades')
    op.drop_index(op.f('ix_trades_exit_price'), table_name='trades')
    op.drop_index(op.f('ix_trades_entry_time'), table_name='trades')
    op.drop_index(op.f('ix_trades_entry_price'), table_name='trades')
    op.drop_index(op.f('ix_trades_algo'), table_name='trades')
    op.drop_table('trades')
    op.drop_index(op.f('ix_symbols_symbol_group'), table_name='symbols')
    op.drop_index(op.f('ix_symbols_symbol'), table_name='symbols')
    op.drop_index(op.f('ix_symbols_expiry'), table_name='symbols')
    op.drop_index(op.f('ix_symbols_asset_class'), table_name='symbols')
    op.drop_table('symbols')
    op.drop_table('_version_')
    # ### end Alembic commands ###
